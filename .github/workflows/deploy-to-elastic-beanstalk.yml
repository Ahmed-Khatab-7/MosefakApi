name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to AWS Elastic Beanstalk with Docker
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          dotnet-version: '9.0.x'  # Matches your project's .NET 9.0 version
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build project
        run: dotnet build --configuration Release --no-restore
      
      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names mosefakapi || \
          aws ecr create-repository --repository-name mosefakapi

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/mosefakapi:${{ github.sha }}
      
      - name: Generate deployment package
        run: |
          cat > Dockerrun.aws.json << EOF
          {
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "${{ steps.login-ecr.outputs.registry }}/mosefakapi:${{ github.sha }}",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": 80,
                "HostPort": 80
              }
            ]
          }
          EOF
      
      - name: Generate deployment package
        run: zip -r deploy.zip Dockerrun.aws.json
      
      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip