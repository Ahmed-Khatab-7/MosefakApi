name: Minimal Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      
      - name: Generate timestamp
        id: timestamp
        run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
      
      - name: Publish app
        run: dotnet publish -c Release -o ./publish
      
      # Create a minimal web.config
      - name: Create web.config
        run: |
          echo '<?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <location path="." inheritInChildApplications="false">
              <system.webServer>
                <handlers>
                  <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified" />
                </handlers>
                <aspNetCore processPath="dotnet" arguments=".\MosefakApi.dll" stdoutLogEnabled="true" stdoutLogFile=".\logs\stdout" hostingModel="inprocess" />
              </system.webServer>
            </location>
          </configuration>' > ./publish/web.config
      
      # Create a basic .ebextensions file
      - name: Create basic .ebextensions
        run: |
          mkdir -p ./publish/.ebextensions
          echo 'option_settings:
            aws:elasticbeanstalk:container:dotnet:apppool:
              Target Runtime: 4.0' > ./publish/.ebextensions/basic.config
      
      - name: Create deployment package
        run: |
          cd publish
          zip -r ../deploy.zip .
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: "mini-${{ steps.timestamp.outputs.timestamp }}"
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy.zip
          use_existing_version_if_available: true
